package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AdditionalVariableAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdditionalVariableAllPropertiesEquals(AdditionalVariable expected, AdditionalVariable actual) {
        assertAdditionalVariableAutoGeneratedPropertiesEquals(expected, actual);
        assertAdditionalVariableAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdditionalVariableAllUpdatablePropertiesEquals(AdditionalVariable expected, AdditionalVariable actual) {
        assertAdditionalVariableUpdatableFieldsEquals(expected, actual);
        assertAdditionalVariableUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdditionalVariableAutoGeneratedPropertiesEquals(AdditionalVariable expected, AdditionalVariable actual) {
        assertThat(expected)
            .as("Verify AdditionalVariable auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdditionalVariableUpdatableFieldsEquals(AdditionalVariable expected, AdditionalVariable actual) {
        assertThat(expected)
            .as("Verify AdditionalVariable relevant properties")
            .satisfies(e -> assertThat(e.getProgramVersionId()).as("check programVersionId").isEqualTo(actual.getProgramVersionId()))
            .satisfies(e -> assertThat(e.getJsonSchema()).as("check jsonSchema").isEqualTo(actual.getJsonSchema()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdditionalVariableUpdatableRelationshipsEquals(AdditionalVariable expected, AdditionalVariable actual) {
        assertThat(expected)
            .as("Verify AdditionalVariable relationships")
            .satisfies(e -> assertThat(e.getVersion()).as("check version").isEqualTo(actual.getVersion()))
            .satisfies(e -> assertThat(e.getSite()).as("check site").isEqualTo(actual.getSite()));
    }
}
