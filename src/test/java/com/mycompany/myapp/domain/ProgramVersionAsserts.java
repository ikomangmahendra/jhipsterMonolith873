package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProgramVersionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramVersionAllPropertiesEquals(ProgramVersion expected, ProgramVersion actual) {
        assertProgramVersionAutoGeneratedPropertiesEquals(expected, actual);
        assertProgramVersionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramVersionAllUpdatablePropertiesEquals(ProgramVersion expected, ProgramVersion actual) {
        assertProgramVersionUpdatableFieldsEquals(expected, actual);
        assertProgramVersionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramVersionAutoGeneratedPropertiesEquals(ProgramVersion expected, ProgramVersion actual) {
        assertThat(expected)
            .as("Verify ProgramVersion auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramVersionUpdatableFieldsEquals(ProgramVersion expected, ProgramVersion actual) {
        assertThat(expected)
            .as("Verify ProgramVersion relevant properties")
            .satisfies(e -> assertThat(e.getVersion()).as("check version").isEqualTo(actual.getVersion()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getPublishDate()).as("check publishDate").isEqualTo(actual.getPublishDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramVersionUpdatableRelationshipsEquals(ProgramVersion expected, ProgramVersion actual) {
        assertThat(expected)
            .as("Verify ProgramVersion relationships")
            .satisfies(e -> assertThat(e.getProgram()).as("check program").isEqualTo(actual.getProgram()));
    }
}
