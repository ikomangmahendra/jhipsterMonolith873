package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserTempAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTempAllPropertiesEquals(UserTemp expected, UserTemp actual) {
        assertUserTempAutoGeneratedPropertiesEquals(expected, actual);
        assertUserTempAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTempAllUpdatablePropertiesEquals(UserTemp expected, UserTemp actual) {
        assertUserTempUpdatableFieldsEquals(expected, actual);
        assertUserTempUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTempAutoGeneratedPropertiesEquals(UserTemp expected, UserTemp actual) {
        assertThat(expected)
            .as("Verify UserTemp auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTempUpdatableFieldsEquals(UserTemp expected, UserTemp actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTempUpdatableRelationshipsEquals(UserTemp expected, UserTemp actual) {
        assertThat(expected)
            .as("Verify UserTemp relationships")
            .satisfies(e -> assertThat(e.getPrograms()).as("check programs").isEqualTo(actual.getPrograms()));
    }
}
